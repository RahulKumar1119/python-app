name: Deploy to AKS cluster

on: 
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master

    - uses: azure/docker-login@v1
      with:
        login-server: sampleregistry77.azurecr.io
        username: ${{ secrets.acr_sampleregistry77_username }}
        password: ${{ secrets.acr_sampleregistry77_password }}

    - name: Build and push image to ACR
      id: build-image
      run: |
        docker build "$GITHUB_WORKSPACE/" -f  "Dockerfile" -t sampleregistry77.azurecr.io/myakscluster:${{ github.sha }} --label dockerfile-path=Dockerfile
        docker push sampleregistry77.azurecr.io/myakscluster:${{ github.sha }}

    - uses: azure/k8s-set-context@v1
      with:
         kubeconfig: ${{ secrets.aks_myakscluster_kubeConfig }}
      id: login

    - name: Create namespace
      run: |
        namespacePresent=`kubectl get python-app | grep default | wc -l`
        if [ $namespacePresent -eq 0 ]
        then
            echo `kubectl create namespace python-app`
        fi

    - uses: azure/k8s-create-secret@v1
      with:
        namespace: python-app
        container-registry-url: sampleregistry77.azurecr.io
        container-registry-username: ${{ secrets.acr_sampleregistry77_username }}
        container-registry-password: ${{ secrets.acr_sampleregistry77_password }}
        secret-name: myaksclusterdockerauth
        
    - name: Change the tag in manifest file
      run: |
        sed -i 's/latest/${{ github.sha }}/g' ./python-app-k8s.yaml
        helm install app-ingress ingress-nginx/ingress-nginx  --namespace ingress --set controller.replicaCount=2 --set controller.nodeSelector."beta\.kubernetes\.io/os"=linux --set defaultBackend.nodeSelector."beta\.kubernetes\.io/os"=linux
        
    - uses: azure/k8s-deploy@v1.2
      with:
        namespace: python-app
        manifests: |
          ./python-app-k8s.yaml
        imagepullsecrets: |
          myaksclusterdockerauth
